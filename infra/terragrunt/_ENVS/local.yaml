# Root Configuration
config:
  version: "1.0.0"
  last_updated: "2024-01-15"
  description: "Centralized configuration for local environment"

# Centralized Local Environment Configuration
git: &git
  base_url: "git::git@github.com:"

# Global Product Identification
product: &product
  name: ref-arch
  version: 0.0.1-local
  description: "Reference architecture for cloud infrastructure - demo environment"
  use_as_stack_tags: true

# Infrastructure as Code Configuration
iac: &iac
  versions:
    terraform_version_default: "1.9.8"
    terragrunt_version_default: "0.62.1"
  remote_state:
    s3:
      bucket: ${TF_STATE_BUCKET}
      lock_table: ${TF_STATE_LOCK_TABLE}
      region: us-east-1

# Top-Level Stacks Configuration
stacks: &stacks
  - name: stack-datastore
    tags:
      stack_purpose: demo-resource-generation
    layers:
      - name: db
        tags:
          layer_type: databases
        components:
          - name: id-generator
            providers:
              - "random"
            tags:
              component_tag: component-tag
            # These terraform variables, set and/or overrides the values set for a given terraform module
            inputs:
              random_string_length: 10
          - name: quota-generator
            providers:
              - "random"
            tags:
              component_tag: component-tag
          - name: name-generator
            providers:
              - "random"
            tags:
              component_tag: component-tag
          - name: dynamodb-table
            providers:
              - "aws"
            tags:
              component_tag: component-tag

# New Top-Level Providers Configuration
providers: &providers
  aws: &aws
    config:
      access_key_id: ${AWS_ACCESS_KEY_ID:-secrets.aws.access_key_id}
      secret_access_key: ${AWS_SECRET_ACCESS_KEY:-secrets.aws.secret_access_key}
      region: us-east-1
    version_constraints:
      - name: aws
        source: "hashicorp/aws"
        required_version: "5.80.0"
        enabled: true
      - name: terraform
        source: "hashicorp/terraform"
        required_version: "1.9.8"
        enabled: true
  # cloudflare: &cloudflare
  #   config:
  #     api_key: ${CLOUDFLARE_API_KEY:-secrets.cloudflare.api_key}
  #     email: ${CLOUDFLARE_EMAIL:-secrets.cloudflare.email}
  #   version_constraints:
  #     - name: cloudflare
  #       source: "cloudflare/cloudflare"
  #       required_version: "5.0.0-alpha1"
  #       enabled: true
  random: &random
    config: {}  # No specific configuration needed for random provider
    version_constraints:
      - name: random
        source: "hashicorp/random"
        required_version: "3.6.3"
        enabled: true

# Secrets Management
secrets: &secrets
  # cloudflare:
  #   api_key: ${CLOUDFLARE_API_KEY}
  #   email: ${CLOUDFLARE_EMAIL}
  # github:
  #   token: ${GITHUB_TOKEN}
  #   owner: ${GITHUB_OWNER}
  aws:
    access_key: ${AWS_ACCESS_KEY_ID}
    secret_key: ${AWS_SECRET_ACCESS_KEY}
